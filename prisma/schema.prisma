// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Save {
  id         Int                @id @default(autoincrement())
  userMail       String @unique
  userNames UserName[]
  pokemons   SavePokemonLink[]
  playerLevel Int
  playerXp    Int
  money   Int
 
  objects SaveObjectLink[]


}

model Pokemon {
  id         Int                @id @default(autoincrement())
  name       String @unique
  saves      SavePokemonLink[]
}

model Object{
  id     Int    @id @default(autoincrement())
  name  String
  price Int
  stock Int
  level Int
   saves  SaveObjectLink[]
}

model SavePokemonLink {
  saveId     Int
  pokemonId  Int

  save       Save     @relation(fields: [saveId], references: [id])
  pokemon    Pokemon  @relation(fields: [pokemonId], references: [id])

  @@id([saveId, pokemonId]) 
}

model SaveObjectLink {
  saveId   Int
  objectId Int

  save     Save   @relation(fields: [saveId], references: [id])
  object   Object @relation(fields: [objectId], references: [id])

  @@id([saveId, objectId]) 
}

model UserName {
  id      String @id @default(cuid())
  name    String
  save    Save   @relation(fields: [saveId], references: [id])
  saveId  Int

  @@unique([name, saveId])
}

