// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Save {
  id          Int               @id @default(autoincrement())
  userMail    String            @unique
  userNames   UserName[]
  pokemons    SavePokemonLink[]
  playerLevel Int
  playerXp    Int
  money       Int

  items SaveItemLink[]
}

model Pokemon {
  id   Int    @id @default(autoincrement())
  name String @unique

  saves SavePokemonLink[]
}

model Item {
  id          Int            @id @default(autoincrement())
  name        String
  imgUrl      String
  price       Int
  stock       Int
  level       Int
  description String
  stats       Json
  saves       SaveItemLink[]
}

model SavePokemonLink {
  id          Int     @id @default(autoincrement())
  save        Save    @relation(fields: [saveId], references: [id])
  saveId      Int
  pokemon     Pokemon @relation(fields: [pokemonId], references: [id])
  pokemonId   Int
  hpCurrent   Int
  hpBase      Int
  happiness   Int     @default(1)
  hunger      Int     @default(1)
  cleanliness Int     @default(1)
  level       Int     @default(0)
  difficulty  Int     @default(0)

  @@unique([saveId, pokemonId])
}

model SaveItemLink {
  saveId   Int
  itemId   Int
  quantity Int

  save Save @relation(fields: [saveId], references: [id])
  item Item @relation(fields: [itemId], references: [id])

  @@id([saveId, itemId])
}

model UserName {
  id     String @id @default(cuid())
  name   String
  save   Save   @relation(fields: [saveId], references: [id])
  saveId Int

  @@unique([name, saveId])
}
